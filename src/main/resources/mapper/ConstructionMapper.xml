<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.just.teachersystem.Mapper.ConstructionMapper">
    <insert id="insertToConstruction" parameterType="com.just.teachersystem.VO.ConstructionInfo">
        insert into construction(
        dptId,projectNum,project,principalId,teammate,startTime,beginToEndTime,sponsor,kindId,levelId,
        testimonial,expenditure,point,computeYear,bonus,fileNumber,isEnd,schoolYear,year,status,
        reason,lastTime
        )values
        (
            (select id from department where dptname=#{department}),
            #{projectNum},
            #{project},
            (select id from user where worknum=#{worknum}),
            #{teammate},
            #{startTime},
            #{beginToEndTime},
            #{sponsor},
            (select id from kind where class1=#{class1} and class2=#{class2} and  class3=#{class3}),
            (select id from level where level =#{level}),
            #{testimonial},
            #{expenditure},
            #{point},
            #{computeYear},
            #{bonus},
            #{fileNumber},
            #{isEnd},
            #{schoolYear},
            #{year},
            #{status},
            #{reason},
            NOW()
        )
    </insert>


    <select id="selectConstructionByWorknum" parameterType="String" resultType="com.just.teachersystem.VO.ConstructionInfo">
        select  cid, department,worknum,projectNum, project, name, teammate,startTime , beginToEndTime,sponsor, class1,class2,class3, level, testimonial,expenditure,point,
        computeYear,fileNumber,isEnd,schoolYear,year,status,lastTime,reason
        from constructionInfo where worknum=#{worknum} order by lastTime desc
    </select>

    <select id="selectConstructions" resultType="com.just.teachersystem.VO.ConstructionInfo" parameterType="com.just.teachersystem.VO.ConstructionInfo">
        select cid, department,worknum,projectNum, project, name, teammate,startTime , beginToEndTime,sponsor, class1,class2,class3, level, testimonial,expenditure,point,
        computeYear,fileNumber,isEnd,schoolYear,year,status,lastTime,reason
        from constructionInfo
        <where>
            <if test="year!=null and year!=''"> year=#{year}  </if>
            <if test="department!=null and department!=''"> and  department=#{department} </if>
            <if test="class2!=null and class2!=''"> and class2=#{class2}  </if>
            <if test="class3!=null and class3!=''"> and class3=#{class3}  </if>
            <if test="level!=null and level!=''"> and level=#{level}  </if>
            <if test="schoolYear!=null and schoolYear!=''"> and schoolYear=#{schoolYear}  </if>
            <if test="isEnd!=null "> and isEnd=#{isEnd}</if>
            <if test="status!=null ">and status=#{status}</if>
            <if test="worknum!=null and worknum!=''"> and  worknum=#{worknum}</if>
        </where>
        order by lastTime desc
    </select>


    <insert id="insertToConstructionList" parameterType="java.util.List">
        insert into construction(
        dptId,projectNum,project,principalId,teammate,startTime,beginToEndTime,sponsor,kindId,levelId,
        testimonial,expenditure,point,computeYear,bonus,fileNumber,isEnd,schoolYear,year,status,
        reason,lastTime)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            (select id from department where dptname=#{item.department}),
            #{item.projectNum},
            #{item.project},
            (select id from user where worknum=#{item.worknum}),
            #{item.teammate},
            #{item.startTime},
            #{item.beginToEndTime},
            #{item.sponsor},
            <if test="item.class2!=null and item.class3!=null">(select id from kind where class2=#{item.class2} and  class3=#{item.class3}),</if>
            <if test="item.level!=null">(select id from level where level =#{item.level}),</if>
            #{item.testimonial},
            #{item.expenditure},
            #{item.point},
            #{item.computeYear},
            #{item.bonus},
            #{item.fileNumber},
            #{item.isEnd},
            #{item.schoolYear},
            #{item.year},
            #{item.status},
            #{item.reason},
            NOW()
            )
        </foreach>
    </insert>


    <update id="updateConstruction" parameterType="com.just.teachersystem.VO.ConstructionInfo">
        update construction
        <trim prefix="set" suffixOverrides=",">
            <if test="department!=null">dptId=(select id from department where dptname=#{department}),</if>
            <if test="projectNum!=null">projectNum=#{projectNum},</if>
            <if test="project!=null">project=#{project},</if>
            <if test="worknum!=null">principalId= (select id from user where worknum=#{worknum}),</if>
            <if test="teammate!=null">teammate=#{teammate},</if>
            <if test="startTime!=null">startTime=#{startTime},</if>
            <if test="beginToEndTime!=null">beginToEndTime=#{beginToEndTime},</if>
            <if test="sponsor!=null">sponsor=#{sponsor},</if>
            <if test="class1!=null and class2!=null and class3!=null">kindId=(select id from kind where class1=#{class1} and class2=#{class2} and  class3=#{class3}),</if>
            <if test="level!=null">levelId=(select id from level where level =#{level}),</if>
            <if test="testimonial!=null">testimonial=#{testimonial},</if>
            <if test="expenditure!=null and expenditure!=''">expenditure=#{expenditure},</if>
            <if test="point!=null and point!=''">point=#{point},</if>
            <if test="computeYear!=null">computeYear=#{computeYear},</if>
            <if test="bonus!=null and bonus !=''">bonus=#{bonus},</if>
            <if test="fileNumber!=null">fileNumber=#{fileNumber},</if>
            <if test="isEnd!=null">isEnd=#{isEnd},</if>
            <if test="schoolYear!=null">schoolYear=#{schoolYear},</if>
            <if test="year!=null">year=#{year},</if>
            <if test="status!=null ">status=#{status},</if>
            <if test="reason!=null">reason=#{reason},</if>
            lastTime=NOW()
        </trim>
        WHERE id=#{cid}
    </update>
</mapper>