<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.just.teachersystem.Mapper.CommonMapper">


    <select id="getUserInfoList" parameterType="com.just.teachersystem.VO.UserInfo" resultType="com.just.teachersystem.VO.UserInfo">
        select
        dptname,name,worknum,gender,birthday,enterTime,phone,techTittle,eduBgd,degree,school,major,doubleTeacher,background,tutor,permission
        from userInfo
        <where>
            <if test="name!=null and name!=''">
                name = #{name} and
            </if>
            <if test="worknum!=null and worknum!=''">
                worknum = #{worknum} and
            </if>
            <if test="dptname!=null and dptname!=''">
                dptname = #{dptname}
            </if>
        </where>
    </select>


    
    
    <insert id="insertUser" parameterType="com.just.teachersystem.VO.UserInfo">
        INSERT  into User
        (dptId,name,worknum,password,gender,birthday,enterTime,phone,techTittle,eduBgd,degree,school,major,doubleTeacher,background,tutor,permission)
        values
        (
        (select id from department where dptname=#{item.dptname}),
            #{item.name},
            #{item.worknum},
            #{item.password},
            #{item.gender},
            #{item.birthday},
            #{item.enterTime},
            #{item.phone},
            #{item.techTittle},
            #{item.eduBgd},
            #{item.degree},
            #{item.school},
            #{item.major},
            #{item.doubleTeacher},
            #{item.background},
            #{item.tutor},
            #{item.permission}
        )
    </insert>


    <insert id="insertToConstructionList" parameterType="java.util.List">
        insert into construction(
        dptId,projectNum,project,principalId,teammate,startYear,beginToEndTime,sponsor,kindId,levelId,
        testimonial,expenditure,point,computeYear,bonus,fileNumber,isEnd,schoolyear,year,status,
        reason,lastTime
        <foreach collection="list" item="item" index="index" separator=",">
            (
            (select id from department where dptname=#{item.department}),
            #{item.projectNum},
            #{item.project},
            (select id from user where worknum=#{item.worknum}),
            #{item.teammate},
            #{item.startYear},
            #{item.beginToEndTime},
            #{item.sponsor},
            <if test="item.class1!=null and item.class2!=null and item.class3!=null">(select id from kind where class1=#{item.class1} and class2=#{item.class2} and  class3=#{item.class3}),</if>
            <if test="item.level!=null">(select id from level where level =#{item.level}),</if>
            #{item.testimonial},
            #{item.expenditure},
            #{item.point},
            #{item.computeYear},
            #{item.bonus},
            #{item.fileNumber},
            #{item.isEnd},
            #{item.schoolyear},
            #{item.year},
            #{item.status},
            #{item.reason},
            NOW()
            )
        </foreach>
    </insert>

<update id="updateConstruction" parameterType="com.just.teachersystem.VO.ConstructionInfo">
    update construction
    <trim prefix="set" suffixOverrides=",">
        <if test="department!=null">dptId=(select id from department where dptname=#{department}),</if>
        <if test="projectNum!=null">projectNum=#{projectNum},</if>
        <if test="project!=null">project=#{project},</if>
        <if test="worknum!=null">principalId= (select id from user where worknum=#{worknum}),</if>
        <if test="teammate!=null">teammate=#{teammate},</if>
        <if test="startYear!=null">startYear=#{startYear},</if>
        <if test="beginToEndTime!=null">beginToEndTime=#{beginToEndTime},</if>
        <if test="sponsor!=null">sponsor=#{sponsor},</if>
        <if test="class1!=null and class2!=null and class3!=null">kindId=(select id from kind where class1=#{class1} and class2=#{class2} and  class3=#{class3}),</if>
        <if test="level!=null">levelId=(select id from level where level =#{level}),</if>
        <if test="testimonial!=null">testimonial=#{testimonial},</if>
        <if test="expenditure!=null and expenditure!=''">expenditure=#{expenditure},</if>
        <if test="point!=null and point!=''">point=#{point},</if>
        <if test="computeYear!=null">computeYear=#{computeYear},</if>
        <if test="bonus!=null and bonus !=''">bonus=#{bonus},</if>
        <if test="fileNumber!=null">fileNumber=#{fileNumber},</if>
        <if test="isEnd!=null and isEnd!=''">isEnd=#{isEnd},</if>
        <if test="schoolyear!=null">schoolyear=#{schoolyear},</if>
        <if test="year!=null">year=#{year},</if>
        <if test="status!=null and status!=''">status=#{status},</if>
        <if test="reason!=null">reason=#{reason},</if>
        lastTime=NOW()
    </trim>
    WHERE id=#{cid}
</update>


    <insert id="insertToAchievementList" parameterType="java.util.List">
        insert into achievement(
        dptId, authorId, teammate, production, kindId, levelId, unit, publishTime, patent, certificate, schoolYear, year, lastTime, status, reason
        )values
        <foreach collection="list" item="item" index="index" separator=",">
        (
            (select id from department where dptname=#{item.department}),
            (select id from user where worknum=#{item.worknum}),
            #{item.teammate},
            #{item.production},
            (select id from kind where class1=#{item.class1} and class2=#{item.class2} and  class3=#{item.class3}),
            (select id from level where level =#{item.level}),
            #{item.unit},
            #{item.publishTime},
            #{item.patent},
            #{item.certificate},
            #{item.schoolYear},
            #{item.year},
            NOW(),
            #{item.status},
            #{item.reason}
        )
        </foreach>
    </insert>

    <update id="updateAchievement" parameterType="com.just.teachersystem.VO.AchievementInfo">
        update achievement
        <trim prefix="set" suffixOverrides=",">
            <if test="department!=null">dptId=(select id from department where dptname=#{department}),</if>
            <if test="worknum!=null">authorId=(select id from user where worknum=#{worknum}),</if>
            <if test="production!=null">production=#{production},</if>
            <if test="teammate!=null">teammate=#{teammate},</if>
            <if test="class1!=null and class2!=null and class3!=null">kindId=(select id from kind where class1=#{class1} and class2=#{class2} and  class3=#{class3}),</if>
            <if test="level!=null">levelId=(select id from level where level =#{level}),</if>
            <if test="unit!=null">unit=#{unit},</if>
            <if test="publishTime!=null ">publishTime=#{publishTime},</if>
            <if test="patent!=null and patent!=''">patent=#{patent},</if>
            <if test="certificate!=null">certificate=#{certificate},</if>
            <if test="schoolYear!=null">schoolYear=#{schoolYear},</if>
            <if test="year!=null">year=#{year},</if>
            <if test="status!=null and status!=''">status=#{status},</if>
            <if test="reason!=null">reason=#{reason},</if>
            lastTime=NOW()
        </trim>
        WHERE id=#{aid}
    </update>


    <insert id="insertToAwardList" parameterType="java.util.List">
        insert into award
        (dtpId, userId, teammate, awardUnit, content, kindId, level, prize, bonus, awardYear, certificate, awardTime, schoolYear,year, status, reason, lastTime)
        values
        <foreach collection="list" item="item" index="index" separator=",">
        (
          (select id from department where dptname=#{department}),
          (select id from user where worknum=#{worknum}),
          #{teammate},
          #{awardUnit},
          #{content},
          (select id from kind where class1=#{class1} and class2=#{class2} and class3=#{class3}),
          (select id from level where level =#{level}),
          #{prize},
          #{bonus},
          #{awardYear},
          #{certificate},
          #{awardTime},
          #{schoolYear},
          #{year},
          #{status},
          #{reason},
          NOW()
        )
        </foreach>
    </insert>

    <update id="updateAward" parameterType="com.just.teachersystem.VO.AwardInfo">
        update award
        <trim prefix="set" suffixOverrides=",">
            <if test="department!=null">dptId=(select id from department where dptname=#{department}),</if>
            <if test="worknum!=null">userId=(select id from user where worknum=#{worknum}),</if>
            <if test="teammate!=null">teammate=#{teammate},</if>
            <if test="awardUnit!=null">awardUnit=#{awardUnit},</if>
            <if test="class1!=null and class2!=null and class3!=null">kindId=(select id from kind where class1=#{class1} and class2=#{class2} and  class3=#{class3}),</if>
            <if test="level!=null">level=(select id from level where level =#{level}),</if>
            <if test="prize!=null ">prize=#{prize},</if>
            <if test="bonus!=null and bonus !=''">bonus=#{bonus},</if>
            <if test="awardYear!=null">awardYear=#{awardYear},</if>
            <if test="certificate!=null">certificate=#{certificate},</if>
            <if test="awardTime!=null">awardTime=#{awardTime},</if>
            <if test="schoolYear!=null">schoolYear=#{schoolYear},</if>
            <if test="year!=null">year=#{year},</if>
            <if test="status!=null and status!=''">status=#{status},</if>
            <if test="reason!=null">reason=#{reason},</if>
            lastTime=NOW()
        </trim>
        WHERE id=#{aid}
    </update>
</mapper>